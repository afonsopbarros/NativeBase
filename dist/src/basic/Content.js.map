{"version":3,"sources":["../../../src/basic/Content.js"],"names":["Content","props","children","contentContainerStyle","padder","style","isKeyboardAvoiding","containerStyle","flex","backgroundColor","variables","context","theme","variable","ScrollViewStyled","padding","contentPadding","undefined","Platform","OS","Component","contextTypes","PropTypes","object","propTypes","bool","oneOfType","number","array","StyledContent","mapPropsToStyleNames"],"mappings":"y1BAAA,iEACA,qC,mDACA,4B,2CACA,yCAEA,qD,iDACA,mE,yEACA,2C,q7BAEMA,Q,mRAKK,4BAOH,KAAKC,KAPF,CAELC,QAFK,QAELA,QAFK,CAGLC,qBAHK,QAGLA,qBAHK,CAILC,MAJK,QAILA,MAJK,CAKLC,KALK,QAKLA,KALK,CAMLC,kBANK,QAMLA,kBANK,CASP,GAAMC,gBAAiB,CACrBC,KAAM,CADe,CAErBC,gBAAiB,uBAASJ,KAAT,EAAgBI,eAFZ,CAAvB,CAKA,GAAMC,WAAY,KAAKC,OAAL,CAAaC,KAAb,CACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC,CAEdG,kBAFJ,CAIA,GAAMC,kBAAmB,QAAnBA,iBAAmB,SACvB,+BAAC,uBAAD,WACE,iCAAiC,OADnC,CAEE,0BAA0B,SAF5B,EAGM,OAAKb,KAHX,EAIE,sBAAuB,CACrB,CAAEc,QAASX,OAASM,UAAUM,cAAnB,CAAoCC,SAA/C,CADqB,CAErBd,qBAFqB,CAJzB,kDASGD,QATH,CADuB,EAAzB,CAcA,MAAOI,oBACL,8BAAC,iCAAD,EACE,SAAUY,sBAASC,EAAT,GAAgB,KAAhB,CAAwB,SAAxB,CAAoC,QADhD,CAEE,MAAOZ,cAFT,iDAIE,8BAAC,gBAAD,kDAJF,CADK,CAQL,8BAAC,iBAAD,EAAM,MAAOA,cAAb,iDACE,8BAAC,gBAAD,kDADF,CARF,CAYD,C,qBAjDmBa,gB,EAAhBpB,O,CACGqB,Y,CAAe,CACpBT,MAAOU,oBAAUC,MADG,C,CAmDxBvB,QAAQwB,SAAR,CAAoB,CAClBpB,OAAQkB,oBAAUG,IADA,CAElBnB,mBAAoBgB,oBAAUG,IAFZ,CAGlBpB,MAAOiB,oBAAUI,SAAV,CAAoB,CACzBJ,oBAAUC,MADe,CAEzBD,oBAAUK,MAFe,CAGzBL,oBAAUM,KAHe,CAApB,CAHW,CAApB,CAUA,GAAMC,eAAgB,yCACpB,oBADoB,CAEpB,EAFoB,CAGpBC,8BAHoB,EAIpB9B,OAJoB,CAAtB,C,QAM0BA,O,CAAjB6B,a","file":"Content.js","sourcesContent":["import { connectStyle } from 'native-base-shoutem-theme';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { KeyboardAvoidingView, ScrollView, Platform, View } from 'react-native';\n\nimport variable from '../theme/variables/platform';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport getStyle from '../utils/getStyle';\n\nclass Content extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  render() {\n    const {\n      children,\n      contentContainerStyle,\n      padder,\n      style,\n      isKeyboardAvoiding\n    } = this.props;\n\n    const containerStyle = {\n      flex: 1,\n      backgroundColor: getStyle(style).backgroundColor\n    };\n\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n\n    const ScrollViewStyled = () => (\n      <ScrollView\n        automaticallyAdjustContentInsets=\"false\"\n        keyboardShouldPersistTaps=\"handled\"\n        {...this.props}\n        contentContainerStyle={[\n          { padding: padder ? variables.contentPadding : undefined },\n          contentContainerStyle\n        ]}\n      >\n        {children}\n      </ScrollView>\n    );\n\n    return isKeyboardAvoiding ? (\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n        style={containerStyle}\n      >\n        <ScrollViewStyled />\n      </KeyboardAvoidingView>\n    ) : (\n      <View style={containerStyle}>\n        <ScrollViewStyled />\n      </View>\n    );\n  }\n}\n\nContent.propTypes = {\n  padder: PropTypes.bool,\n  isKeyboardAvoiding: PropTypes.bool,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ])\n};\n\nconst StyledContent = connectStyle(\n  'NativeBase.Content',\n  {},\n  mapPropsToStyleNames\n)(Content);\n\nexport { StyledContent as Content };\n"]}