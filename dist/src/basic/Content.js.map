{"version":3,"sources":["../../../src/basic/Content.js"],"names":["Content","props","children","contentContainerStyle","padder","style","disableKBDismissScroll","keyboardShouldPersistTaps","containerStyle","flex","backgroundColor","variables","context","theme","variable","x","y","_scrollview","c","_root","padding","contentPadding","undefined","Component","contextTypes","PropTypes","object","propTypes","bool","isKeyboardAvoiding","oneOfType","number","array","StyledContent","mapPropsToStyleNames"],"mappings":"y1BAAA,iEACA,qC,mDACA,4B,2CACA,yCAEA,qD,iDACA,mE,yEACA,2C,q7BAEMA,Q,mRAKK,4BAQH,KAAKC,KARF,CAELC,QAFK,QAELA,QAFK,CAGLC,qBAHK,QAGLA,qBAHK,CAILC,MAJK,QAILA,MAJK,CAKLC,KALK,QAKLA,KALK,CAMLC,sBANK,QAMLA,sBANK,CAOLC,yBAPK,QAOLA,yBAPK,CAUP,GAAMC,gBAAiB,CACrBC,KAAM,CADe,CAErBC,gBAAiB,uBAASL,KAAT,EAAgBK,eAFZ,CAAvB,CAKA,GAAMC,WAAY,KAAKC,OAAL,CAAaC,KAAb,CACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC,CAEdG,kBAFJ,CAIA,MACE,+BAAC,iBAAD,EAAM,MAAON,cAAb,iDACE,8BAAC,uBAAD,WACE,iCAAkC,KADpC,CAEE,oBAAqBF,uBAAyB,IAAzB,CAAgC,CAAES,EAAG,CAAL,CAAQC,EAAG,CAAX,CAFvD,CAGE,0BAA2BT,2BAA6B,SAH1D,CAIE,IAAK,eAAK,CACR,OAAKU,WAAL,CAAmBC,CAAnB,CACA,OAAKC,KAAL,CAAaD,CAAb,CACD,CAPH,EAQM,KAAKjB,KARX,EASE,sBAAuB,CACrB,CAAEmB,QAAShB,OAASO,UAAUU,cAAnB,CAAoCC,SAA/C,CADqB,CAErBnB,qBAFqB,CATzB,kDAcGD,QAdH,CADF,CADF,CAoBD,C,qBA5CmBqB,gB,EAAhBvB,O,CACGwB,Y,CAAe,CACpBX,MAAOY,oBAAUC,MADG,C,CA8CxB1B,QAAQ2B,SAAR,CAAoB,CAClBvB,OAAQqB,oBAAUG,IADA,CAElBC,mBAAoBJ,oBAAUG,IAFZ,CAGlBvB,MAAOoB,oBAAUK,SAAV,CAAoB,CACzBL,oBAAUC,MADe,CAEzBD,oBAAUM,MAFe,CAGzBN,oBAAUO,KAHe,CAApB,CAHW,CAApB,CAUA,GAAMC,eAAgB,yCACpB,oBADoB,CAEpB,EAFoB,CAGpBC,8BAHoB,EAIpBlC,OAJoB,CAAtB,C,QAM0BA,O,CAAjBiC,a","file":"Content.js","sourcesContent":["import { connectStyle } from 'native-base-shoutem-theme';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { View, ScrollView } from 'react-native';\n\nimport variable from '../theme/variables/platform';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport getStyle from '../utils/getStyle';\n\nclass Content extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  render() {\n    const {\n      children,\n      contentContainerStyle,\n      padder,\n      style,\n      disableKBDismissScroll,\n      keyboardShouldPersistTaps\n    } = this.props;\n\n    const containerStyle = {\n      flex: 1,\n      backgroundColor: getStyle(style).backgroundColor\n    };\n\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n\n    return (\n      <View style={containerStyle}>\n        <ScrollView\n          automaticallyAdjustContentInsets={false}\n          resetScrollToCoords={disableKBDismissScroll ? null : { x: 0, y: 0 }}\n          keyboardShouldPersistTaps={keyboardShouldPersistTaps || 'handled'}\n          ref={c => {\n            this._scrollview = c;\n            this._root = c;\n          }}\n          {...this.props}\n          contentContainerStyle={[\n            { padding: padder ? variables.contentPadding : undefined },\n            contentContainerStyle\n          ]}\n        >\n          {children}\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nContent.propTypes = {\n  padder: PropTypes.bool,\n  isKeyboardAvoiding: PropTypes.bool,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ])\n};\n\nconst StyledContent = connectStyle(\n  'NativeBase.Content',\n  {},\n  mapPropsToStyleNames\n)(Content);\n\nexport { StyledContent as Content };\n"]}