{"version":3,"sources":["../../../src/basic/Container.js"],"names":["Container","state","keyboardFloating","_onKeyboardWillChangeFrame","windowWidth","Dimensions","get","width","setState","event","endCoordinates","keyboardWillChangeFrameListener","Keyboard","addListener","remove","props","noSafeArea","Platform","OS","flex","_root","c","children","hasBottomTabBar","Component","propTypes","ViewPropTypes","style","PropTypes","oneOfType","object","number","array","bool","StyledContainer","mapPropsToStyleNames"],"mappings":"61BAAA,4B,2CACA,yCAMA,0EACA,qC,mDACA,iEAEA,+BACA,mE,68BAEMA,U,uZACJC,K,CAAQ,CACNC,iBAAkB,KADZ,C,OAcRC,0B,CAA6B,eAAS,CACpC,GAAMC,aAAcC,wBAAWC,GAAX,CAAe,QAAf,EAAyBC,KAA7C,CACA,MAAKC,QAAL,CAAc,CACZN,iBAAkBO,MAAMC,cAAN,CAAqBH,KAArB,GAA+BH,WADrC,CAAd,EAGD,C,mIAhBmB,CAClB,KAAKO,+BAAL,CAAuCC,sBAASC,WAAT,CACrC,yBADqC,CAErC,KAAKV,0BAFgC,CAAvC,CAID,C,mEAEsB,CACrB,KAAKQ,+BAAL,CAAqCG,MAArC,GACD,C,uCAQQ,iBACP,GAAI,KAAKC,KAAL,CAAWC,UAAf,CAA2B,CACzB,MAAOC,uBAASC,EAAT,GAAgB,KAAhB,CACL,8BAAC,iCAAD,WACE,SAAU,SADZ,CAEE,QAAS,CAAC,KAAKjB,KAAL,CAAWC,gBAFvB,CAGE,MAAO,CACLiB,KAAM,CADD,CAHT,CAME,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EANP,EAOM,KAAKN,KAPX,mDASG,KAAKA,KAAL,CAAWO,QATd,CADK,CAaL,8BAAC,iCAAD,WACE,SAAU,SADZ,CAEE,QAAS,CAAC,KAAKrB,KAAL,CAAWC,gBAFvB,CAGE,MAAO,CACLiB,KAAM,CADD,CAHT,CAME,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EANP,EAOM,KAAKN,KAPX,mDASG,KAAKA,KAAL,CAAWO,QATd,CAbF,CAyBD,CACD,MAAOL,uBAASC,EAAT,GAAgB,KAAhB,CACL,8BAAC,wCAAD,WACE,MAAO,CACLC,KAAM,CADD,CADT,CAIE,MACE,KAAKJ,KAAL,CAAWQ,eAAX,CACI,CAAC,OAAD,CAAU,MAAV,CAAkB,KAAlB,CADJ,CAEI,CAAC,QAAD,CAAW,MAAX,CAAmB,OAAnB,CAA4B,KAA5B,CAPR,CASE,IAAK,sBAAM,QAAKH,KAAL,CAAaC,CAAnB,EATP,EAUM,KAAKN,KAVX,mDAYE,8BAAC,iCAAD,EACE,QAAS,CAAC,KAAKd,KAAL,CAAWC,gBADvB,CAEE,SAAU,SAFZ,CAGE,MAAO,CAAEiB,KAAM,CAAR,CAHT,iDAKG,KAAKJ,KAAL,CAAWO,QALd,CAZF,CADK,CAsBL,8BAAC,wCAAD,WACE,MACE,KAAKP,KAAL,CAAWQ,eAAX,CACI,CAAC,OAAD,CAAU,MAAV,CAAkB,KAAlB,CADJ,CAEI,CAAC,QAAD,CAAW,MAAX,CAAmB,OAAnB,CAA4B,KAA5B,CAJR,CAME,MAAO,CACLJ,KAAM,CADD,CANT,CASE,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EATP,EAUM,KAAKN,KAVX,mDAYE,8BAAC,iCAAD,EAAsB,SAAU,QAAhC,CAA0C,MAAO,CAAEI,KAAM,CAAR,CAAjD,iDACG,KAAKJ,KAAL,CAAWO,QADd,CAZF,CAtBF,CAuCD,C,uBAxFqBE,gB,EA2FxBxB,UAAUyB,SAAV,aACKC,oBADL,EAEEC,MAAOC,oBAAUC,SAAV,CAAoB,CACzBD,oBAAUE,MADe,CAEzBF,oBAAUG,MAFe,CAGzBH,oBAAUI,KAHe,CAApB,CAFT,CAOEhB,WAAYY,oBAAUK,IAPxB,CAQEV,gBAAiBK,oBAAUK,IAR7B,GAWA,GAAMC,iBAAkB,yCACtB,sBADsB,CAEtB,EAFsB,CAGtBC,8BAHsB,EAItBnC,SAJsB,CAAxB,C,QAM4BA,S,CAAnBkC,e","file":"Container.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  KeyboardAvoidingView,\n  Platform,\n  Keyboard,\n  Dimensions\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport PropTypes from 'prop-types';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport { ViewPropTypes } from '../utils';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nclass Container extends Component {\n  state = {\n    keyboardFloating: false\n  };\n  componentDidMount() {\n    this.keyboardWillChangeFrameListener = Keyboard.addListener(\n      'keyboardWillChangeFrame',\n      this._onKeyboardWillChangeFrame\n    );\n  }\n\n  componentWillUnmount() {\n    this.keyboardWillChangeFrameListener.remove();\n  }\n\n  _onKeyboardWillChangeFrame = event => {\n    const windowWidth = Dimensions.get('window').width;\n    this.setState({\n      keyboardFloating: event.endCoordinates.width !== windowWidth\n    });\n  };\n  render() {\n    if (this.props.noSafeArea) {\n      return Platform.OS === 'ios' ? (\n        <KeyboardAvoidingView\n          behavior={'padding'}\n          enabled={!this.state.keyboardFloating}\n          style={{\n            flex: 1\n          }}\n          ref={c => (this._root = c)}\n          {...this.props}\n        >\n          {this.props.children}\n        </KeyboardAvoidingView>\n      ) : (\n        <KeyboardAvoidingView\n          behavior={'padding'}\n          enabled={!this.state.keyboardFloating}\n          style={{\n            flex: 1\n          }}\n          ref={c => (this._root = c)}\n          {...this.props}\n        >\n          {this.props.children}\n        </KeyboardAvoidingView>\n      );\n    }\n    return Platform.OS === 'ios' ? (\n      <SafeAreaView\n        style={{\n          flex: 1\n        }}\n        edges={\n          this.props.hasBottomTabBar\n            ? ['right', 'left', 'top']\n            : ['bottom', 'left', 'right', 'top']\n        }\n        ref={c => (this._root = c)}\n        {...this.props}\n      >\n        <KeyboardAvoidingView\n          enabled={!this.state.keyboardFloating}\n          behavior={'padding'}\n          style={{ flex: 1 }}\n        >\n          {this.props.children}\n        </KeyboardAvoidingView>\n      </SafeAreaView>\n    ) : (\n      <SafeAreaView\n        edges={\n          this.props.hasBottomTabBar\n            ? ['right', 'left', 'top']\n            : ['bottom', 'left', 'right', 'top']\n        }\n        style={{\n          flex: 1\n        }}\n        ref={c => (this._root = c)}\n        {...this.props}\n      >\n        <KeyboardAvoidingView behavior={'height'} style={{ flex: 1 }}>\n          {this.props.children}\n        </KeyboardAvoidingView>\n      </SafeAreaView>\n    );\n  }\n}\n\nContainer.propTypes = {\n  ...ViewPropTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  noSafeArea: PropTypes.bool,\n  hasBottomTabBar: PropTypes.bool\n};\n\nconst StyledContainer = connectStyle(\n  'NativeBase.Container',\n  {},\n  mapPropsToStyleNames\n)(Container);\n\nexport { StyledContainer as Container };\n"]}